<project name="Peergos web UI" default="update_and_run" basedir=".">
  <description>
    Building Peergos and the web UI
  </description>

  <property name="peergos_project_root" location="peergos"/>
  <property name="server" location="server"/>
  <property name="ui_src" location="src"/>
  <property name="ui" location="${server}/webroot"/>
  <property name="assets" location="assets"/>
  <property name="vendor" location="vendor"/>


  <target name="peergos_submodule" description="sync. peergos dependency">
          <exec executable="git" dir="." failonerror="true">
                  <arg value="submodule"/>
                  <arg value="init"/>
          </exec>
          <exec executable="git" dir="." failonerror="true">
                  <arg value="submodule"/>
                  <arg value="update"/>
          </exec>
	      <exec executable="git" dir="." failonerror="true">
                  <arg value="submodule"/>
                  <arg value="foreach"/>
		          <arg value="git"/>
		          <arg value="pull"/>
		          <arg value="origin"/>
		          <arg value="master"/>
        		  <arg value="--rebase"/>
          </exec>
  </target>

  <target name="init">
    <mkdir dir="${ui}/css/"/>
  </target>

  <!-- web ui building vendor and assets -->

  <target name="assets" description="copy static unminified assets">
    <mkdir dir="${ui}"/>
    <copy todir="${ui}">
      <fileset dir="${assets}"/>
    </copy>
  </target>

  <target name="js_vendor_dev" description="concat (don't minify) the vendor JS for development">
    <concat destfile="${ui}/js/vendor.js">
      <fileset dir="${vendor}/priors" includes="*.js"/>
      <fileset dir="${vendor}/dev" includes="*.js"/>
      <fileset dir="${vendor}/common" includes="*.js"/>
    </concat>
  </target>

  <target name="js_vendor_prod" description="concat and minify the vendor JS for production">
    <concat destfile="tmp.js">
      <fileset dir="${vendor}/priors" includes="*.js"/>
      <fileset dir="${vendor}/min" includes="*.js"/>
      <fileset dir="${vendor}/common" includes="*.js"/>
    </concat>
    <exec executable="java" dir="." failonerror="true">
      <arg value="-jar"/>
      <arg value="yuicompressor-2.4.8.jar"/>
      <arg value="-o"/>
      <arg value="${ui}/js/vendor.js"/>
      <arg value="tmp.js"/>
    </exec>
    <delete file="tmp.js"/>
  </target>

  <target name="css_vendor" description="concat and minify the vendor CSS">
    <concat destfile="tmp.css">
      <fileset dir="${vendor}/min" includes="*.css"/>
      <fileset dir="${vendor}/common" includes="*.css"/>
    </concat>
    <exec executable="java" dir="." failonerror="true">
      <arg value="-jar"/>
      <arg value="yuicompressor-2.4.8.jar"/>
      <arg value="-o"/>
      <arg value="${ui}/css/vendor.css"/>
      <arg value="tmp.css"/>
    </exec>
    <delete file="tmp.css"/>
  </target>

  <target name="css" description="concat and minify the vendor CSS">
    <concat destfile="tmp.css">
      <fileset dir="${ui_src}/" includes="*.css"/>
    </concat>
    <exec executable="java" dir="." failonerror="true">
      <arg value="-jar"/>
      <arg value="yuicompressor-2.4.8.jar"/>
      <arg value="-o"/>
      <arg value="${ui}/css/peergos.css"/>
      <arg value="tmp.css"/>
    </exec>
    <delete file="tmp.css"/>
  </target>

  <target name="ui_dev_vendor" depends="assets,js_vendor_dev,css_vendor" description="build the ui vendor dependencies in development mode">
  </target>

  <target name="ui_prod_vendor" depends="assets,js_vendor_prod,css_vendor" description="build the ui vendor dependencies in production mode">
  </target>

  <!-- web ui building our stuff -->
  <target name="js" description="bundle all our vuejs components into js">
    <exec executable="java" dir="." failonerror="true" >
      <arg value="-jar"/>
      <arg value="JPack.jar"/>
      <arg value="-root"/>
      <arg value="${ui_src}/peergos.js"/>
      <arg value="-out"/>
      <arg value="${ui}/js/peergos.js"/>
    </exec>
  </target>

  <target name="ui" depends="init,ui_dev_vendor,assets,css,js" description="build our part of the ui">
  </target>

  <taskdef name="watch"
           classname="org.apache.tools.ant.taskdefs.optional.watch.WatchTask"
           classpath="lib/watch-task-1.0.jar" />

  <target name="watch_ui" depends="ui_dev_vendor,ui">
    <watch>
      <when>
        <target name="ui"/>
        <fileset dir="${ui_src}" includes="**/*"/>
	<fileset dir="${assets}" includes="**/*"/>
      </when>
    </watch>
  </target>

  <!-- server building and running -->

  <target name="compile_server" depends="init" description="compile and build the server">
    <exec executable="ant" dir="${peergos_project_root}" failonerror="true">
      <arg value="dist"/>
    </exec>
    <exec executable="ant" dir="${peergos_project_root}" failonerror="true">
      <arg value="gwtc"/>
    </exec>
  </target>

  <target name="update_server" depends="compile_server, ui" description="regenerate the server">
    <mkdir dir="${server}"/>
    <mkdir dir="${server}/webroot"/>

    <copy todir="${server}" overwrite="true">
        <fileset file="${peergos_project_root}/PeergosServer.jar"/>
    </copy>

    <!--flatten Peergos dependencies into a  fat-jar -->
    <zip destfile="${server}/PeergosServer.jar" update="true">
        <zipgroupfileset dir="${peergos_project_root}/lib" includes="*.jar"/>
    </zip>        
    <!-- add web resouces to fat-jar under webroot -->
    <zip destfile="${server}/PeergosServer.jar" update="true">
            <fileset dir="${server}">
                    <include name="**/webroot/**"/>
            </fileset>
    </zip>        

  </target>

  <target name="run" depends="">
    <exec executable="java" dir="${server}" failonerror="true">
      <arg value="-jar"/>
      <arg value="PeergosServer.jar"/>
      <arg value="-local"/>
      <arg value="-useIPFS"/>
      <arg value="false"/>
      <arg value="-webroot"/>
      <arg value="webroot"/>
      <arg value="-webcache"/>
      <arg value="false"/>
    </exec>
  </target> 

  <target name="update_and_run" depends="peergos_submodule,update_server,run">
  </target>

  <target name="test" depends="">
  </target> 

  <target name="clean" description="clean up">
    <delete dir="${ui}"/>
  </target>

  <target name="clean_server" description="clean up">
    <delete dir="${server}"/>
  </target>
</project>
