"use strict";
var FS_1 = require('./FS');
var fs = new FS_1["default"]();
var _fsMock = {};
var FSProto = FS_1["default"].prototype;
Object.keys(FSProto).forEach(function (key) {
    if (typeof fs[key] === 'function') {
        _fsMock[key] = function () {
            return fs[key].apply(fs, arguments);
        };
    }
    else {
        _fsMock[key] = fs[key];
    }
});
_fsMock['changeFSModule'] = function (newFs) {
    fs = newFs;
};
_fsMock['getFSModule'] = function () {
    return fs;
};
_fsMock['_wrapCb'] = function (cb, numArgs) {
    return fs._wrapCb(cb, numArgs);
};
_fsMock['FS'] = FS_1["default"];
module.exports = _fsMock;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9mcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb3JlL25vZGVfZnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLG1CQUFzQyxNQUFNLENBQUMsQ0FBQTtBQVc3QyxJQUFJLEVBQUUsR0FBRyxJQUFJLGVBQUUsRUFBRSxDQUFDO0FBQ2xCLElBQUksT0FBTyxHQUFtQixFQUFFLENBQUM7QUFFakMsSUFBSSxPQUFPLEdBQUcsZUFBRSxDQUFDLFNBQVMsQ0FBQztBQUMzQixNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFDLEdBQUc7SUFDL0IsRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUMsR0FBRyxDQUFDLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBQztRQUNsQyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUc7WUFDYixNQUFNLENBQWEsRUFBRSxDQUFDLEdBQUcsQ0FBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDbkQsQ0FBQyxDQUFDO0lBQ0osQ0FBQztJQUFDLElBQUksQ0FBQyxDQUFDO1FBQ04sT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN6QixDQUFDO0FBQ0gsQ0FBQyxDQUFDLENBQUM7QUFFSCxPQUFPLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxVQUFTLEtBQVM7SUFDNUMsRUFBRSxHQUFHLEtBQUssQ0FBQztBQUNiLENBQUMsQ0FBQTtBQUNELE9BQU8sQ0FBQyxhQUFhLENBQUMsR0FBRztJQUN2QixNQUFNLENBQUMsRUFBRSxDQUFDO0FBQ1osQ0FBQyxDQUFBO0FBQ0QsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLFVBQVMsRUFBWSxFQUFFLE9BQWU7SUFDekQsTUFBTSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ2pDLENBQUMsQ0FBQztBQUNGLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxlQUFFLENBQUM7QUFFbkIsaUJBQVMsT0FBTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtkZWZhdWx0IGFzIEZTLCBGU01vZHVsZX0gZnJvbSAnLi9GUyc7XHJcbmltcG9ydCB7RmlsZVN5c3RlbX0gZnJvbSAnLi9maWxlX3N5c3RlbSc7XHJcbmltcG9ydCB7QXBpRXJyb3J9IGZyb20gJy4vYXBpX2Vycm9yJztcclxuaW1wb3J0IFN0YXRzIGZyb20gJy4vbm9kZV9mc19zdGF0cyc7XHJcblxyXG4vLyBNYW51YWxseSBleHBvcnQgdGhlIGluZGl2aWR1YWwgcHVibGljIGZ1bmN0aW9ucyBvZiBmcy5cclxuLy8gUmVxdWlyZWQgYmVjYXVzZSBzb21lIGNvZGUgd2lsbCBpbnZva2UgZnVuY3Rpb25zIG9mZiBvZiB0aGUgbW9kdWxlLlxyXG4vLyBlLmcuOlxyXG4vLyBsZXQgd3JpdGVGaWxlID0gZnMud3JpdGVGaWxlO1xyXG4vLyB3cml0ZUZpbGUoLi4uKVxyXG5cclxubGV0IGZzID0gbmV3IEZTKCk7XHJcbmxldCBfZnNNb2NrOiBGU01vZHVsZSA9IDxhbnk+IHt9O1xyXG5cclxubGV0IEZTUHJvdG8gPSBGUy5wcm90b3R5cGU7XHJcbk9iamVjdC5rZXlzKEZTUHJvdG8pLmZvckVhY2goKGtleSkgPT4ge1xyXG4gIGlmICh0eXBlb2YgZnNba2V5XSA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgX2ZzTW9ja1trZXldID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIHJldHVybiAoPEZ1bmN0aW9uPiBmc1trZXldKS5hcHBseShmcywgYXJndW1lbnRzKTtcclxuICAgIH07XHJcbiAgfSBlbHNlIHtcclxuICAgIF9mc01vY2tba2V5XSA9IGZzW2tleV07XHJcbiAgfVxyXG59KTtcclxuXHJcbl9mc01vY2tbJ2NoYW5nZUZTTW9kdWxlJ10gPSBmdW5jdGlvbihuZXdGczogRlMpOiB2b2lkIHtcclxuICBmcyA9IG5ld0ZzO1xyXG59XHJcbl9mc01vY2tbJ2dldEZTTW9kdWxlJ10gPSBmdW5jdGlvbigpOiBGUyB7XHJcbiAgcmV0dXJuIGZzO1xyXG59XHJcbl9mc01vY2tbJ193cmFwQ2InXSA9IGZ1bmN0aW9uKGNiOiBGdW5jdGlvbiwgbnVtQXJnczogbnVtYmVyKTogRnVuY3Rpb24ge1xyXG4gIHJldHVybiBmcy5fd3JhcENiKGNiLCBudW1BcmdzKTtcclxufTtcclxuX2ZzTW9ja1snRlMnXSA9IEZTO1xyXG5cclxuZXhwb3J0ID0gX2ZzTW9jaztcclxuIl19